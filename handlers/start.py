from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from keyboards.inline import get_main_keyboard
import logging

router = Router()
logger = logging.getLogger(__name__)


@router.message(CommandStart())
async def cmd_start(message: Message):
    try:
        welcome_text = """
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatGPT –±–æ—Ç!

–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π:

üé≤ *–†–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç* - –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –Ω–∞—É—á–Ω—ã–µ —Ñ–∞–∫—Ç—ã
üí¨ *ChatGPT* - –ü—Ä—è–º–æ–π –¥–∏–∞–ª–æ–≥ —Å –ò–ò
üë§ *–î–∏–∞–ª–æ–≥ —Å –ª–∏—á–Ω–æ—Å—Ç—å—é* - –û–±—â–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –ª–∏—á–Ω–æ—Å—Ç—è–º–∏
‚ùì *–ö–≤–∏–∑* - –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã
üåê *–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫* - –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–Ω–æ–≥–∏—Ö —è–∑—ã–∫–æ–≤
üé§ *–ì–æ–ª–æ—Å–æ–≤–æ–π —á–∞—Ç* - –û–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è

–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –Ω–∏–∂–µ üëá
        """

        await message.answer(
            welcome_text,
            reply_markup=get_main_keyboard(),
            parse_mode='Markdown'
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cmd_start: {e}")


@router.callback_query(F.data == "start")
async def start_callback(callback: CallbackQuery):
    await callback.answer()

    welcome_text = """
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatGPT –±–æ—Ç!

–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π:
    """

    await callback.message.edit_text(
        welcome_text,
        reply_markup=get_main_keyboard(),
        parse_mode='Markdown'
    )